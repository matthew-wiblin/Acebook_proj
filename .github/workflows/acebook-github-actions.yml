name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install MongoDB
      run: |
        sudo apt-get update
        sudo apt-get install -y gnupg
        wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org
        sudo systemctl start mongod
        sudo systemctl status mongod

    - name: Install dependencies
      run: npm install

    - name: Start server
      run: npm run start:test &

    - name: Run tests
      run: npm test

    - name: Package application
      run: zip -r Acebook_proj.zip .

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Upload to S3
      run: |
        aws s3 cp Acebook_proj.zip s3://matthew-acebook-s3-bucket/Acebook_proj.zip

    - name: Deploy with CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name fire-acebook-application \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name fire-acebook-deployment \
          --s3-location bucket=matthew-acebook-s3-bucket,key=Acebook_proj.zip,bundleType=zip